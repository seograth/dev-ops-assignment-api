pipeline {
    agent any

    parameters {
        string(name: 'DOCKER_IMAGE', defaultValue: 'seograth/fastapi-demo', description: 'Docker image name')
        string(name: 'VERSION_TAG', defaultValue: 'latest', description: 'Docker image tag')
    }

    stages {

        stage('Pull Docker Image') {
            steps {
                script {
                    sh "docker pull ${params.DOCKER_IMAGE}:${params.VERSION_TAG}"
                }
            }
        }

        stage('Deploy Docker Image') {
            steps {
                script {
                    // Stop and remove any existing container with the same name
                    sh "docker ps -q -f name=my-app | xargs -r docker stop | xargs -r docker rm"

                    // Run the new Docker container
                    sh """
                    docker run -d \\
                        --name my-app \\
                        --restart always \\
                        -p 80:80 \\
                        ${params.DOCKER_IMAGE}:${params.VERSION_TAG}
                    """
                }
            }
        }
    }

    post {
        always {
            // Clean up any resources if needed
            sh "docker system prune -f"
        }
    }
}
